version: '3.8'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cicop_db}
      POSTGRES_USER: ${POSTGRES_USER:-cicop_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cicop_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cicop_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  cicop-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-cicop_user}:${POSTGRES_PASSWORD:-cicop_secure_password}@postgres:5432/${POSTGRES_DB:-cicop_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://localhost,http://localhost:8501}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"

  cicop-ml-server:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      - SERVICE_MODE=ml-server
      - MODEL_PATH=/app/models/model.pkl
    volumes:
      - model_data:/app/models
    ports:
      - "8001:8001"

  cicop-gateway:
    build:
      context: .
    environment:
      - SERVICE_MODE=gateway
    depends_on:
      - cicop-api
      - cicop-ml-server
    ports:
      - "8002:8002"

  cicop-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      - SERVICE_MODE=dashboard
      - DATABASE_URL=postgresql://${POSTGRES_USER:-cicop_user}:${POSTGRES_PASSWORD:-cicop_secure_password}@postgres:5432/${POSTGRES_DB:-cicop_db}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8501:8501"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - cicop-api
      - cicop-dashboard

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin_secure_password}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  redis_data:
  model_data:
  prometheus_data:
  grafana_data:
